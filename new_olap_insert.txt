=============================Dim and Facts Creation ==========================
create table DMA.DimEmployees(
EmployeeId int identity(1,1) Primary key,
EmployeeFirstName nvarchar(max),
EmployeeLastName nvarchar(max),
EmployeeEmail nvarchar(max),
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE(),
);

select * from DMA.DimEmployees;


-- DateDimension creation 
-- Drop table DMA.DimDate;

create table DMA.DimDate(
DateKey int  Primary key,
Date date,
DayofWeek nvarchar(max),
DayofMonth nvarchar(max),
MonthName nvarchar(max),
Quatr nvarchar(max),
Year int,
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE()
)

select * from DMA.DimDate;

-- FactReports creation 
-- Drop table DMA.FactReports;

create table DMA.FactReports(
Id int identity(1,1) Primary key,
Updates nvarchar(max),
SubmittedTime datetime,
DProjectId int,
DEmployeesId int,
ViewersID int,
DDateKey int,
DServiceKey int,
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE(),
FOREIGN KEY (DEmployeesId) REFERENCES DMA.DimEmployees(EmployeeId),
FOREIGN KEY (ViewersID) REFERENCES DMA.DimEmployees(EmployeeId),
FOREIGN KEY (DDateKey) REFERENCES DMA.DimDate(DateKey),
FOREIGN KEY (DProjectId) REFERENCES DMA.DimProject(Id),
FOREIGN KEY (DServiceKey) REFERENCES DMA.DimService(ServiceId)
);

select * from DMA.FactReports;

-- checks for PK and FK --
SELECT * FROM information_schema.key_column_usage

-- create a triggers for updatedAt values in Dim and Fact Tables
create trigger UpdatedAtDimEmp2 on DMA.DimEmployees
after update as
Begin
update DMA.DimEmployees set updatedAt = getdate()
where EmployeeId in (select EmployeeId from inserted)
end;

-- 
create trigger UpdatedAtDimDate2 on DMA.DimDate
after update as
Begin
update DMA.DimDate set updatedAt = getdate()
where DateKey in (select DateKey from inserted)
end;



-- create a triggers for Fact to updateAt column
create trigger UpdatedAtFactReport on DMA.FactReports
after update as
Begin
update DMA.FactReports set updatedAt = getdate()
where id in (select id from inserted)
end;


create table DMA.DimClient(
ClientId int identity(1,1) primary key,
ClientName nvarchar(max),
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE(),
);

-- create trigger updateAt fro DimClient
create trigger UpdatedAtDimClient on DMA.DimClient
after update as
Begin
update DMA.DimClient set updatedAt = getdate()
where ClientId in (select ClientId from inserted)
end;

-- ----------------------------------------------------------
-- Drop Table DMA.DimProject;

create table DMA.DimProject(
Id int identity(1,1) Primary key,
ProjectName nvarchar(max),
DClientId int,
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE(),
FOREIGN KEY (DClientId) REFERENCES DMA.DimClient(ClientId),
);

-- create trigger updateAt fro DimProject
create trigger UpdatedAtDimProject on DMA.DimProject
after update as
Begin
update DMA.DimProject set updatedAt = getdate()
where Id in (select Id from inserted)
end;
--  --------------------------------------------
Drop table DMA.DimService;

create table DMA.DimService(
ServiceId int identity(1,1) primary key ,
RagName nvarchar(max),
CreatedAt datetime DEFAULT getDate(),
updatedAt datetime DEFAULT GETDATE(),
)
-- create trigger updateAt fro DimProject
create trigger UpdatedAtDimService on DMA.DimService
after update as
Begin
update DMA.DimService set updatedAt = getdate()
where ServiceId in (select ServiceId from inserted)
end;


=================================Stage Table ================================
create table DMA.StgReports(
Id int identity(1,1) Primary key,
Title nvarchar(max),
Updates nvarchar(max),
SubmittedTime datetime,
EmployeeEmail nvarchar(max),
ViewEmail nvarchar(max)
);


=======================================Insertion Stg to Dim =============================
DateDim
WITH t AS (
    SELECT 1 AS sr_no
    UNION ALL
    SELECT sr_no + 1 FROM t WHERE sr_no < 122
),
t1 AS (
    SELECT DATEADD(DAY, sr_no - 49, GETDATE()) AS a FROM t
)
INSERT INTO DMA.DimDate (DateKey, Date, DayOfWeek, DayOfMonth, MonthName, Quatr, Year)
SELECT REPLACE(CONVERT(DATE, a), '-', '') AS DateKey, CONVERT(DATE, a) AS Date, DATENAME(WEEKDAY, a) AS DayOfWeek, 
       DAY(a) AS DayOfMonth, DATENAME(MONTH, a) AS MonthName, 'Q' + CAST(DATEPART(QUARTER, a) AS NVARCHAR(MAX)) AS Quatr,
       YEAR(a) AS Year
FROM t1
where not exists(
select 1 from DMA.DimDate
where DateKey = replace(convert(date, a), '-', '')
)
ORDER BY Date desc
OPTION (MAXRECURSION 0);


=============================================================DimEmployees==============================
WITH DataEmployees AS (
    SELECT
        Id,
        EmployeeEmail ,
		ViewEmail,
        ROW_NUMBER() OVER (PARTITION BY  EmployeeEmail,ViewEmail ORDER BY Id) AS rn
    FROM DMA.StgReports
)
INSERT INTO DMA.DimEmployees(EmployeeFirstName, EmployeeLastName, EmployeeEmail)
SELECT Distinct
    PARSENAME(s.EmployeeEmail, 3),
    REPLACE(PARSENAME(REPLACE(s.EmployeeEmail, '@', '.'), 3), '.', ''),
    s.EmployeeEmail
FROM
    DataEmployees s

WHERE
    s.rn = 1 AND NOT EXISTS (
        SELECT 1
        FROM DMA.DimEmployees t
        WHERE t.EmployeeEmail = s.EmployeeEmail
);

WITH UniqueViewEmails AS (
    SELECT DISTINCT ViewEmail
    FROM DMA.StgReports
)

INSERT INTO DMA.DimEmployees (EmployeeFirstName, EmployeeLastName, EmployeeEmail)
SELECT
    PARSENAME(s.ViewEmail, 3) AS EmployeeFirstName,
    REPLACE(PARSENAME(REPLACE(s.ViewEmail, '@', '.'), 3), '.', '') AS EmployeeLastName,
    s.ViewEmail AS EmployeeEmail
FROM
    UniqueViewEmails s
WHERE
    NOT EXISTS (
        SELECT 1
        FROM DMA.DimEmployees t
        WHERE t.EmployeeEmail = s.ViewEmail
);

update DMA.DimEmployees
set EmployeeFirstName = concat(upper(substring(EmployeeFirstName,1,1)), lower(substring(EmployeeFirstName,2, len(EmployeeFirstName)))),

	EmployeeLastName = concat(upper(substring(EmployeeLastName,1,1)), lower(substring(EmployeeLastName,2, len(EmployeeLastName))));


=======================================================DimProject==========================================================
Insert into DMA.DimProject (ProjectName)
select Distinct 
Replace(SUBSTRING(Updates, 1, CHARINDEX('Update', Updates) - 1),'Service', '') AS ServiceValue
from DMA.StgReports
where Updates like 'Service%' and not exists 
(select * from DMA.DimProject where ProjectName = Replace(SUBSTRING(Updates, 1, CHARINDEX('Update', Updates) - 1),'Service', '')
);

====================================================DimServices=================================================================
Insert into DMA.DimService(RagName)
select Distinct
SUBSTRING(Updates, CHARINDEX('Service Health RAG', Updates) + LEN('Service Health RAG') + 1, LEN(Updates)) AS ServiceValue
from DMA.StgReports
where Updates like 'Service%'And CHARINDEX('Service Health RAG', Updates) > 0 AND NOT EXISTS (
  SELECT * FROM DMA.DimService
  WHERE RagName = SUBSTRING(Updates, CHARINDEX('Service Health RAG', Updates) + LEN('Service Health RAG') + 1, LEN(Updates))
)

===========================================================FactReports==========================================================
INSERT INTO DMA.FactReports (Updates, SubmittedTime, DDateKey, DProjectId, DEmployeesId, ViewersID, DServiceKey)
SELECT DISTINCT
    REPLACE(REPLACE(REPLACE(REPLACE(
        SUBSTRING(Updates, CHARINDEX('Update', Updates) + LEN('Update') + 1,
            CHARINDEX('Service Health RAG', Updates) - CHARINDEX('Update', Updates) - LEN('Update') - 1
        ), '<div>', ''), '</div>', ''), '<br>', ''), '&nbsp;', '') AS ServiceValue,
    stg.SubmittedTime,
    dd.DateKey,
    dp.Id AS DProjectId,
    de.EmployeeId AS DEmployeesId,
    dv.EmployeeId AS ViewersID,
    ds.ServiceId AS DServiceKey
FROM
    DMA.StgReports stg
JOIN DMA.DimDate dd ON convert(date, stg.SubmittedTime) = dd.Date
JOIN DMA.DimProject dp ON REPLACE(SUBSTRING(stg.Updates, 1, CHARINDEX('Update', stg.Updates) - 1), 'Service', '') = dp.ProjectName
JOIN DMA.DimEmployees de ON stg.EmployeeEmail = de.EmployeeEmail 
JOIN DMA.DimEmployees dv ON stg.ViewEmail = dv.EmployeeEmail 
JOIN DMA.DimService ds ON SUBSTRING(stg.Updates, CHARINDEX('Service Health RAG', stg.Updates) + LEN('Service Health RAG') + 1, LEN(stg.Updates)) = ds.RagName 
WHERE
    stg.Updates LIKE 'Service%' and NOT EXISTS (select 1 from DMA.FactReports tf where tf.Updates = REPLACE(REPLACE(REPLACE(REPLACE(
        SUBSTRING(stg.Updates,
            CHARINDEX('Update', stg.Updates) + LEN('Update') + 1,
            CHARINDEX('Service Health RAG', stg.Updates) - CHARINDEX('Update', stg.Updates) - LEN('Update') - 1
        ), '<div>', ''), '</div>', ''), '<br>', ''), '&nbsp;', '')
    AND tf.SubmittedTime = stg.SubmittedTime);

=========================================================================================================================================================